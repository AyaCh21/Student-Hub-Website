#define the base docker image file
image : composer:2.7

#prepare container with some extra configuration
before_script:
  - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
  - mkdir -p ~/.ssh
  - eval `ssh-agent -s`
  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
  - chmod 700 ~/.ssh
  - ssh-keyscan shell.studev.groept.be > ~/.ssh/known_hosts
  - apk add rsync
  - docker-php-ext-install pdo pdo_mysql
  - apk add chromium-chromedriver
  - export PANTHER_NO_SANDBOX=1
  - export SYMFONY_DEPRECATIONS_HELPER=weak

stages:
  - test
  - deploy

build-job:
  stage: test
  only: 
    - dev
  artifacts:
    paths:
      - vendor/
  script:
    - composer install

unit-job:
  stage: test
  only:
    - dev
  needs: 
    - build-job
  before_script:
    # dependencies for composer to run
    - apt-get -yq install git unzip zip libzip-dev zlib1g-dev
    - docker-php-ext-install zip
    # xdebug is needed for phpunit to generate coverage
    - pecl install xdebug
    - docker-php-ext-enable xdebug
  script:
    - COMPOSER_ALLOW_SUPERUSER=1 composer require --dev phpunit/phpunit phpunit/php-code-coverage
    - vendor/bin/phpunit --configuration phpunit.xml.dist --coverage-cobertura=coverage.cobertura.xml
  artifacts:
    paths: 
      - coverage.cobertura.xml
      - phpunit-html
    untracked: false
    when: on_success
    access: all
    expire_in: 30 days
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.cobertura.xml

deploy-job:
  stage: deploy
  only:
    - dev
  when: manual
  script:
    - php bin/console cache:clear --env=prod --no-debug
    - php bin/console cache:warmup --env=prod --no-debug
    - rsync -avz --exclude=".git/" 
                 --exclude=".env" 
                 ./ a23www301@shell.studev.groept.be:/var/www/html