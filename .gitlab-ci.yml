#define the base docker image file
image : composer:2.7

#prepare container with some extra configuration
before_script:
  - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
  - mkdir -p ~/.ssh
  - eval `ssh-agent -s`
  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
  - chmod 700 ~/.ssh
  - ssh-keyscan shell.studev.groept.be > ~/.ssh/known_hosts
  - apk add rsync

stages:
  - test
  - deploy

test-job:
  stage: test
  only:
    - dev
  when: manual
  image: php:8.2
  before_script:
    # dependencies for composer to run
    - apt-get update
    - apt-get -yq install git unzip zip libzip-dev zlib1g-dev
    - docker-php-ext-install zip
    # xdebug is needed for phpunit to generate coverage
    - pecl install xdebug
    - docker-php-ext-enable xdebug
    # install composer
    - php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
    - php composer-setup.php --install-dir=/usr/local/bin --filename=composer
    - php -r "unlink('composer-setup.php');"
  script:
    - COMPOSER_ALLOW_SUPERUSER=1 composer install --prefer-dist --no-interaction
    - COMPOSER_ALLOW_SUPERUSER=1 composer require --dev phpunit/phpunit phpunit/php-code-coverage
    - php ./vendor/bin/phpunit --coverage-text --coverage-cobertura=coverage.cobertura.xml
    - ls -a
    - cat coverage.cobertura.xml
  artifacts:
    untracked: false
    when: on_success
    access: all
    expire_in: 30 days
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.cobertura.xml


deploy-job:
  stage: deploy
  only:
    - dev
    - main
  when: manual
  script:
    - composer install --prefer-dist --no-interaction --optimize-autoloader
    - php bin/console cache:clear --env=prod --no-debug
    - php bin/console cache:warmup --env=prod --no-debug
    - rsync -avz --exclude=".git/" 
                 --exclude=".env" 
                 ./ a23www301@shell.studev.groept.be:/var/www/html