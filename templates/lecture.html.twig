{% extends 'base.html.twig' %}

{% block title %}{{ courseName }}: {{ type }}{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="{{ asset('css/lecture.css') }}">
{% endblock %}

{% block content %}
    <div class="container">
        <h1>{{ courseName }}: {{ type }}</h1>

        <div class="section ratings-section">
            <h2 class="section-title">Difficulty Rating of Past Exam</h2>
            <p>This is where the difficulty rating of past exams will go.</p>
        </div>

        <div class="section ratings-section">
            <h2 class="section-title">Rating for Professor</h2>
            <p>This is where the rating for the professor will go.</p>
        </div>

        <div class="section materials-section">
            <h2 class="section-title">Materials</h2>
            {% for material in studyMaterials %}
                <div class="pdf-container">
                    <p>{{ material.getText() }}</p>
                    {% if material.getFilePath() %}
                        <div class="pdf-viewer">
                            <embed src="{{ material.getFilePath() }}" type="application/pdf">
                        </div>
                        <a href="{{ material.getFilePath() }}" class="download-button" download>Download PDF</a>
                    {% endif %}
                </div>
            {% endfor %}
        </div>

        <div class="section comments-section">
            <h2 class="section-title">Comments</h2>
            <p>This is where the comments will go.</p>
            {#this is where the user will post their own comment#}
            <div class="comment-form">
                {{ form_start(commentForm) }}
                {{ form_widget(commentForm) }}
                <button type="submit" class="btn btn-primary">Add Comment</button>
                {{ form_end(commentForm) }}
            </div>
           {# below this all the comments for this page will be displayed#}
            <div class="comment-list">
                {% for comment in comments %}
                    {% if comment.getParent() is null %}
                        <div class="comment-wrapper">  <!-- Added wrapper for each top-level comment -->
                            <div class="comment">
                                <p>{{ comment.getCommentText() }}</p>
                                <small>Posted by User {{ comment.getUserId() }} on {{ comment.getCreatedAt()|date('Y-m-d H:i') }}</small>
                                <button class="reply-button" data-comment-id="{{ comment.getId() }}">Reply</button>
                            </div>
                            {% if comment.getChildren() is not empty %}
                                <div class="replies">
                                    {% for child in comment.getChildren() %}
                                        <div class="comment-wrapper">  <!-- Added wrapper for each child comment -->
                                            <div class="comment">
                                                <p>{{ child.getCommentText() }}</p>
                                                <small>Posted by User {{ child.getUserId() }} on {{ child.getCreatedAt()|date('Y-m-d H:i') }}</small>
                                            </div>
                                        </div>
                                    {% endfor %}
                                </div>
                            {% endif %}
                        </div>
                    {% endif %}
                {% endfor %}
            </div>
        </div>
    </div>
{# i put he javascript funcition here bc the file webage was not able to access it before#}
    <script>
        //you should be able to reply to each top level comment
        document.querySelectorAll('.reply-button').forEach(button => {
            button.addEventListener('click', function() {
                const commentId = this.getAttribute('data-comment-id');
                document.getElementById('parent_id').value = commentId;
                document.querySelector('.comment-form').scrollIntoView({ behavior: 'smooth' });
            });
        });

        document.getElementById('comment-form').addEventListener('submit', function(event) {
            event.preventDefault();
            const form = event.target;
            const formData = new FormData(form);

            fetch(form.action, {
                method: 'POST',
                body: formData,
                headers: {
                    'X-Requested-With': 'XMLHttpRequest'
                }
            }).then(response => {
                if (response.ok) {
                    form.reset();
                    document.getElementById('parent_id').value = '';
                }
            }).catch(error => {
                console.error('Error submitting form:', error);
            });
        });
    </script>


{% endblock %}
