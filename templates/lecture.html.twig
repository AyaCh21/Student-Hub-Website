{% extends 'base.html.twig' %}

{% block title %}{{ courseName }}: {{ type }}{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="{{ asset('css/lecture.css') }}">
{% endblock %}

{% block content %}
    <div class="container">
        <h1>{{ courseName }}: {{ type }}</h1>

        <div class="section ratings-section">
            <h2 class="section-title">Difficulty Rating of Past Exam</h2>
            <div class="card">
                <div class="card-body">
                    {% if averageCourseRating %}
                        <p class="card-text">Exam Difficulty: {{ averageCourseRating.average|number_format(2) }}</p>
                        <p class="card-text">Number of People who voted: {{ averageCourseRating.count }}</p>
                    {% else %}
                        <p class="card-text">No ratings available.</p>
                    {% endif %}
                    <a href="{{ path('rate_this_exam', {'courseId': course.id, 'type': type}) }}" class="btn btn-primary">Rate this Exam</a>
                </div>
            </div>
        </div>

        <div class="section ratings-section">
            <h2 class="section-title">Rating for Professor</h2>
            <div class="card">
                <div class="card-body">
                    {% if averageProfessorRating %}
                        <h5 class="card-title">Professor Name: {{ professorName }}</h5>
                        <p class="card-text">Average Rating: {{ averageProfessorRating.average|number_format(2) }}</p>
                        <p class="card-text">Number of Ratings: {{ averageProfessorRating.count }}</p>
                    {% else %}
                        <p class="card-text">No ratings available.</p>
                    {% endif %}
                    <a href="{{ path('rate_professor', {'professorId': professor.id, 'type': type, 'courseId': course.id}) }}" class="btn btn-primary">Rate this Professor</a>
                </div>
            </div>
        </div>

        <div class="section materials-section">
            <h2 class="section-title">Materials</h2>
            {% for material in studyMaterials %}
                {% if material.getFilePath() %}
                    <div class="pdf-link">
                        {% set pdf_parts = material.getFilePath() | split('/') %}
                        <a href="{{ material.getFilePath() }}" target="_blank" rel="noopener noreferrer">
                            {{ pdf_parts | last }}
                        </a>
                        <button class="generate-summary" data-pdf-id="{{ material.getId() }}">Generate Summary</button>
                    </div>
                {% elseif material.getTestPdf() %}
                    <div class="pdf-link">
                        <a href="{{ path('view_pdf', {id: material.getId()}) }}" target="_blank" rel="noopener noreferrer">
                            {{ material.getText() }}
                        </a>
                        <button class="generate-summary" data-pdf-id="{{ material.getId() }}">Generate Summary</button>
                    </div>
                {% endif %}
            {% endfor %}
        </div>

        <div class="section upload-section">
            <h2 class="section-title">Upload your file here</h2>
            <p>The user will upload a pdf file here</p>
            {{ form_start(form) }}
            {{ form_row(form.course) }}
            {{ form_row(form.type) }}
            {{ form_row(form.text) }}
            {{ form_row(form.test_pdf) }}
            <button class="btn">Upload</button>
            {{ form_end(form) }}
        </div>

        <div class="section comments-section">
            <h2 class="section-title">Comments</h2>
            <p>This is where the comments will go.</p>
            <div class="comment-form">
                {{ form_start(commentForm) }}
                {{ form_widget(commentForm) }}
                <button type="submit" class="btn btn-primary">Add Comment</button>
                {{ form_end(commentForm) }}
            </div>
            <div class="comment-list">
                {% for comment in comments %}
                    {% if comment.getParent() is null %}
                        <div class="comment-wrapper">
                            <div class="comment">
                                <p>{{ comment.getCommentText() }}</p>
                                <small>Posted by User {{ comment.getUserId() }} on {{ comment.getCreatedAt()|date('Y-m-d H:i') }}</small>
                                <button class="reply-button" data-comment-id="{{ comment.getId() }}">Reply</button>
                            </div>
                            {% if comment.getChildren() is not empty %}
                                <div class="replies">
                                    {% for child in comment.getChildren() %}
                                        <div class="comment-wrapper">
                                            <div class="comment">
                                                <p>{{ child.getCommentText() }}</p>
                                                <small>Posted by User {{ child.getUserId() }} on {{ child.getCreatedAt()|date('Y-m-d H:i') }}</small>
                                            </div>
                                        </div>
                                    {% endfor %}
                                </div>
                            {% endif %}
                        </div>
                    {% endif %}
                {% endfor %}
            </div>
        </div>
    </div>

    <div id="reply-form-template" style="display: none;">
        {{ form_start(replyForm) }}
        {{ form_widget(replyForm.comment_text) }}
        {{ form_widget(replyForm._token) }}
        <input type="hidden" name="parent_id" class="parent_id">
        <button type="submit" class="btn btn-primary">Reply</button>
        {{ form_end(replyForm) }}
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Generate Summary Buttons
            document.querySelectorAll('.generate-summary').forEach(button => {
                button.addEventListener('click', function() {
                    const pdfId = this.dataset.pdfId;
                    fetch('{{ path('generate_summary') }}', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'X-CSRF-TOKEN': '{{ csrf_token('generate_summary') }}'
                        },
                        body: JSON.stringify({ pdf_id: pdfId })
                    })
                        .then(response => {
                            if (!response.ok) {
                                throw new Error('Network response was not ok');
                            }
                            return response.blob();
                        })
                        .then(blob => {
                            const url = window.URL.createObjectURL(blob);
                            const a = document.createElement('a');
                            a.style.display = 'none';
                            a.href = url;
                            a.download = 'summary.pdf';
                            document.body.appendChild(a);
                            a.click();
                            window.URL.revokeObjectURL(url);
                        })
                        .catch(error => console.error('Error:', error));
                });
            });

            // Reply Buttons
            document.querySelectorAll('.reply-button').forEach(button => {
                button.addEventListener('click', function() {
                    const commentId = this.dataset.commentId;
                    const replyFormTemplate = document.getElementById('reply-form-template').innerHTML;
                    const replyFormContainer = document.createElement('div');
                    replyFormContainer.classList.add('reply-form-container');
                    replyFormContainer.innerHTML = replyFormTemplate;
                    replyFormContainer.querySelector('.parent_id').value = commentId;

                    const parentComment = this.closest('.comment-wrapper');
                    parentComment.appendChild(replyFormContainer);

                    // Optional: Remove existing reply forms to avoid duplicates
                    document.querySelectorAll('.reply-form-container').forEach(form => {
                        if (form !== replyFormContainer) {
                            form.remove();
                        }
                    });
                });
            });
        });
    </script>
{% endblock %}